group 'org.dorff'
version '1.0-SNAPSHOT'

buildscript {
    // So we can use $kotlin_version in specifying dependencies.
    ext.kotlin_version = '1.0.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

// For ease of startup
task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'application'

//mainClassName = 'HelloKotlinWorldKt'
mainClassName = 'HelloGroovyWorld'

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

//println "sourceSets.test=" + sourceSets.test.unit.groovy.dump()

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    // Interop Kotlin AND groovy
    compile 'org.codehaus.groovy:groovy-all:2.4.5'

    // Testing with Spock (Groovy)
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

    // optional dependencies for using Spock
    testCompile 'org.hamcrest:hamcrest-core:1.3' // only necessary if Hamcrest matchers are used
    testRuntime 'cglib:cglib-nodep:3.2.0'        // allows mocking of classes (in addition to interfaces)
    testRuntime 'org.objenesis:objenesis:2.2'    // allows mocking of classes without default constructor (together with CGLIB)
}
